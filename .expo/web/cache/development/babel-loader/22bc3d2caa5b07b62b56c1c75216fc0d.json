{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    loadingLogin: false,\n    isLogin: false,\n    user: {},\n    token: '',\n    loadingUpdate: false,\n    loadingOrder: false,\n    listOrder: []\n  },\n  reducers: {\n    loginUser: function loginUser(state, action) {\n      state.loadingLogin = true;\n    },\n    loginUserSuccess: function loginUserSuccess(state, action) {\n      state.loadingLogin = false;\n      AsyncStorage.setItem('token', action.payload.access_token);\n      state.isLogin = true;\n      state.token = action.payload.access_token;\n    },\n    logoutUser: function logoutUser(state, action) {\n      AsyncStorage.removeItem('token');\n      state.isLogin = false;\n    },\n    getInfoUser: function getInfoUser(state, action) {},\n    getInfoUserSuccess: function getInfoUserSuccess(state, action) {\n      state.user = action.payload;\n    },\n    updateInfoUser: function updateInfoUser(state, action) {\n      state.loadingUpdate = true;\n    },\n    updateInfoUserSuccess: function updateInfoUserSuccess(state, action) {\n      state.loadingUpdate = false;\n    },\n    getListOrderUser: function getListOrderUser(state, action) {\n      state.loadingOrder = true;\n    },\n    getListOrderUserSuccess: function getListOrderUserSuccess(state, action) {\n      state.listOrder = action.payload;\n      state.loadingOrder = false;\n    }\n  }\n});\nvar _userSlice$actions = userSlice.actions,\n    loginUser = _userSlice$actions.loginUser,\n    loginUserSuccess = _userSlice$actions.loginUserSuccess,\n    logoutUser = _userSlice$actions.logoutUser,\n    getInfoUser = _userSlice$actions.getInfoUser,\n    getInfoUserSuccess = _userSlice$actions.getInfoUserSuccess,\n    updateInfoUser = _userSlice$actions.updateInfoUser,\n    updateInfoUserSuccess = _userSlice$actions.updateInfoUserSuccess,\n    getListOrderUser = _userSlice$actions.getListOrderUser,\n    getListOrderUserSuccess = _userSlice$actions.getListOrderUserSuccess;\nexport { loginUser, loginUserSuccess, logoutUser, getInfoUser, getInfoUserSuccess, updateInfoUser, updateInfoUserSuccess, getListOrderUser, getListOrderUserSuccess };\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/store/slices/userSlice.js"],"names":["createSlice","AsyncStorage","userSlice","name","initialState","loadingLogin","isLogin","user","token","loadingUpdate","loadingOrder","listOrder","reducers","loginUser","state","action","loginUserSuccess","setItem","payload","access_token","logoutUser","removeItem","getInfoUser","getInfoUserSuccess","updateInfoUser","updateInfoUserSuccess","getListOrderUser","getListOrderUserSuccess","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAO,IAAMC,SAAS,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAG;AACbC,IAAAA,YAAY,EAAE,KADD;AAEbC,IAAAA,OAAO,EAAE,KAFI;AAGbC,IAAAA,IAAI,EAAE,EAHO;AAIbC,IAAAA,KAAK,EAAE,EAJM;AAKbC,IAAAA,aAAa,EAAE,KALF;AAMbC,IAAAA,YAAY,EAAE,KAND;AAObC,IAAAA,SAAS,EAAE;AAPE,GAFoB;AAWnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5BD,MAAAA,KAAK,CAACT,YAAN,GAAqB,IAArB;AACD,KAHO;AAIRW,IAAAA,gBAAgB,EAAE,0BAACF,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,CAACT,YAAN,GAAqB,KAArB;AAEAJ,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACG,OAAP,CAAeC,YAA7C;AACAL,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACG,OAAP,CAAeC,YAA7B;AACD,KAVO;AAWRC,IAAAA,UAAU,EAAE,oBAACN,KAAD,EAAQC,MAAR,EAAmB;AAC7Bd,MAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACAP,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD,KAdO;AAeRgB,IAAAA,WAAW,EAAE,qBAACR,KAAD,EAAQC,MAAR,EAAmB,CAE/B,CAjBO;AAkBRQ,IAAAA,kBAAkB,EAAE,4BAACT,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACG,OAApB;AACD,KApBO;AAqBRM,IAAAA,cAAc,EAAE,wBAACV,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,CAACL,aAAN,GAAsB,IAAtB;AACD,KAvBO;AAwBRgB,IAAAA,qBAAqB,EAAE,+BAACX,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACL,aAAN,GAAsB,KAAtB;AACD,KA1BO;AA2BRiB,IAAAA,gBAAgB,EAAE,0BAACZ,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,CAACJ,YAAN,GAAqB,IAArB;AACD,KA7BO;AA8BRiB,IAAAA,uBAAuB,EAAE,iCAACb,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACG,OAAzB;AACAJ,MAAAA,KAAK,CAACJ,YAAN,GAAqB,KAArB;AACD;AAjCO;AAXyB,CAAD,CAA7B;AAkDA,yBAKHR,SAAS,CAAC0B,OALP;AAAA,IAAOf,SAAP,sBAAOA,SAAP;AAAA,IAAkBG,gBAAlB,sBAAkBA,gBAAlB;AAAA,IAAoCI,UAApC,sBAAoCA,UAApC;AAAA,IAAgDE,WAAhD,sBAAgDA,WAAhD;AAAA,IAA6DC,kBAA7D,sBAA6DA,kBAA7D;AAAA,IACLC,cADK,sBACLA,cADK;AAAA,IAELC,qBAFK,sBAELA,qBAFK;AAAA,IAGLC,gBAHK,sBAGLA,gBAHK;AAAA,IAILC,uBAJK,sBAILA,uBAJK;;AAOP,eAAezB,SAAS,CAAC2B,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState : {\r\n    loadingLogin: false,\r\n    isLogin: false,\r\n    user: {},\r\n    token: '',\r\n    loadingUpdate: false,\r\n    loadingOrder: false,\r\n    listOrder: []\r\n  },\r\n  reducers: {\r\n    loginUser: (state, action) => {\r\n      state.loadingLogin = true;\r\n    },\r\n    loginUserSuccess: (state, action) => {\r\n      state.loadingLogin = false;\r\n      // console.log(action.payload.access_token)\r\n      AsyncStorage.setItem('token', action.payload.access_token)\r\n      state.isLogin = true;\r\n      state.token = action.payload.access_token\r\n    },\r\n    logoutUser: (state, action) => {\r\n      AsyncStorage.removeItem('token');\r\n      state.isLogin = false;\r\n    },\r\n    getInfoUser: (state, action) => {\r\n      // console.log('da vao slice')\r\n    },\r\n    getInfoUserSuccess: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    updateInfoUser: (state, action) => {\r\n      state.loadingUpdate = true;\r\n    },\r\n    updateInfoUserSuccess: (state, action) => {\r\n      state.loadingUpdate = false;\r\n    },\r\n    getListOrderUser: (state, action) => {\r\n      state.loadingOrder = true;\r\n    },\r\n    getListOrderUserSuccess: (state, action) => {\r\n      state.listOrder = action.payload;\r\n      state.loadingOrder = false;\r\n    }\r\n  },\r\n  \r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {loginUser, loginUserSuccess, logoutUser, getInfoUser, getInfoUserSuccess,\r\n  updateInfoUser,\r\n  updateInfoUserSuccess,\r\n  getListOrderUser,\r\n  getListOrderUserSuccess\r\n} = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}