{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getLoginUser),\n    _marked2 = _regeneratorRuntime.mark(getInfoUserSaga),\n    _marked3 = _regeneratorRuntime.mark(updateInfoUserSaga),\n    _marked4 = _regeneratorRuntime.mark(getListOrderUserSaga),\n    _marked5 = _regeneratorRuntime.mark(watchGetListOrderUserSaga),\n    _marked6 = _regeneratorRuntime.mark(watchUpdateInfoUserSaga),\n    _marked7 = _regeneratorRuntime.mark(watchGetInfoUserSaga),\n    _marked8 = _regeneratorRuntime.mark(watchGetLoginUser);\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport CategoryService from \"../services/categoryService\";\nimport DetailService from \"../services/detailService\";\nimport UserService from \"../services/userService\";\nimport { getCategory, getCategorySuccess } from \"../store/slices/categorySlice\";\nimport { getDetail, getDetailSuccess } from \"../store/slices/detailSlice\";\nimport { getInfoUser, getInfoUserSuccess, getListOrderUser, getListOrderUserSuccess, loginUser, loginUserSuccess, updateInfoUser, updateInfoUserSuccess } from \"../store/slices/userSlice\";\nimport * as RootNavigation from \"../navigation/rootNavigation\";\nimport { showMessage } from 'react-native-flash-message';\n\nfunction getLoginUser(action) {\n  var _yield$call, res, err;\n\n  return _regeneratorRuntime.wrap(function getLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(function () {\n            return UserService.login(action.payload.data);\n          });\n\n        case 2:\n          _yield$call = _context.sent;\n          res = _yield$call.res;\n          err = _yield$call.err;\n\n          if (!((res == null ? void 0 : res.status) === 200)) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 8;\n          return put(loginUserSuccess(res.data));\n\n        case 8:\n          action.payload.navigation.goBack();\n          _context.next = 12;\n          break;\n\n        case 11:\n          console.log('error slider');\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction getInfoUserSaga(action) {\n  var _yield$call2, res, err;\n\n  return _regeneratorRuntime.wrap(function getInfoUserSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(function () {\n            return UserService.get();\n          });\n\n        case 2:\n          _yield$call2 = _context2.sent;\n          res = _yield$call2.res;\n          err = _yield$call2.err;\n\n          if (!((res == null ? void 0 : res.status) === 200)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(getInfoUserSuccess(res.data));\n\n        case 8:\n          _context2.next = 11;\n          break;\n\n        case 10:\n          console.log('error slider');\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction updateInfoUserSaga(action) {\n  var _yield$call3, res1, err, _yield$call4, res, _err;\n\n  return _regeneratorRuntime.wrap(function updateInfoUserSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return call(function () {\n            return UserService.change(action.payload);\n          });\n\n        case 2:\n          _yield$call3 = _context3.sent;\n          res1 = _yield$call3.res1;\n          err = _yield$call3.err;\n\n          if (!(res1.status === 202)) {\n            _context3.next = 22;\n            break;\n          }\n\n          _context3.next = 8;\n          return call(function () {\n            return UserService.get();\n          });\n\n        case 8:\n          _yield$call4 = _context3.sent;\n          res = _yield$call4.res;\n          _err = _yield$call4.err;\n\n          if (!(res.status === 200)) {\n            _context3.next = 19;\n            break;\n          }\n\n          _context3.next = 14;\n          return put(getInfoUserSuccess(res.data));\n\n        case 14:\n          _context3.next = 16;\n          return put(updateInfoUserSuccess(res1.data));\n\n        case 16:\n          showMessage({\n            message: 'Cập nhật thông tin thành công',\n            type: 'success',\n            duration: 3000\n          });\n          _context3.next = 20;\n          break;\n\n        case 19:\n          console.log('error get');\n\n        case 20:\n          _context3.next = 23;\n          break;\n\n        case 22:\n          console.log('error update');\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction getListOrderUserSaga(action) {\n  var _yield$call5, res, err;\n\n  return _regeneratorRuntime.wrap(function getListOrderUserSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return call(function () {\n            return UserService.getOrder();\n          });\n\n        case 2:\n          _yield$call5 = _context4.sent;\n          res = _yield$call5.res;\n          err = _yield$call5.err;\n\n          if (!((res == null ? void 0 : res.status) === 200)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 8;\n          return put(getListOrderUserSuccess(res.data));\n\n        case 8:\n          _context4.next = 11;\n          break;\n\n        case 10:\n          console.log('error slider');\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport function watchGetListOrderUserSaga() {\n  return _regeneratorRuntime.wrap(function watchGetListOrderUserSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(getListOrderUser, getListOrderUserSaga);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function watchUpdateInfoUserSaga() {\n  return _regeneratorRuntime.wrap(function watchUpdateInfoUserSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(updateInfoUser, updateInfoUserSaga);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watchGetInfoUserSaga() {\n  return _regeneratorRuntime.wrap(function watchGetInfoUserSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(getInfoUser, getInfoUserSaga);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function watchGetLoginUser() {\n  return _regeneratorRuntime.wrap(function watchGetLoginUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(loginUser, getLoginUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/sagas/userSaga.js"],"names":["getLoginUser","getInfoUserSaga","updateInfoUserSaga","getListOrderUserSaga","watchGetListOrderUserSaga","watchUpdateInfoUserSaga","watchGetInfoUserSaga","watchGetLoginUser","call","put","takeEvery","CategoryService","DetailService","UserService","getCategory","getCategorySuccess","getDetail","getDetailSuccess","getInfoUser","getInfoUserSuccess","getListOrderUser","getListOrderUserSuccess","loginUser","loginUserSuccess","updateInfoUser","updateInfoUserSuccess","RootNavigation","showMessage","action","login","payload","data","res","err","status","navigation","goBack","console","log","get","change","res1","message","type","duration","getOrder"],"mappings":"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","sourcesContent":["\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport CategoryService from '../services/categoryService';\r\nimport DetailService from '../services/detailService';\r\nimport UserService from '../services/userService';\r\nimport { getCategory, getCategorySuccess } from '../store/slices/categorySlice';\r\nimport { getDetail, getDetailSuccess } from '../store/slices/detailSlice';\r\nimport { getInfoUser, getInfoUserSuccess, getListOrderUser, getListOrderUserSuccess, loginUser, loginUserSuccess, updateInfoUser, updateInfoUserSuccess } from '../store/slices/userSlice';\r\nimport * as RootNavigation from '../navigation/rootNavigation';\r\nimport { showMessage } from 'react-native-flash-message';\r\n\r\nfunction* getLoginUser(action) {\r\n    // console.log(action)\r\n    const {res, err} = yield call(() => UserService.login(action.payload.data));\r\n    // action.payload.navigation.goBack();\r\n    if(res?.status === 200) {\r\n        // console.log('thanh cong')\r\n        yield put(loginUserSuccess(res.data))\r\n        action.payload.navigation.goBack();\r\n        // if(action.payload.name === 'info') {\r\n\r\n        //     RootNavigation.navigate('LoginHomeScreen');\r\n        // }\r\n        // else if(action.payload.name === 'order') {\r\n        //     RootNavigation.navigate('OrderScreen');\r\n        // }\r\n        // else if(action.payload.name === 'confirm') {\r\n        //     RootNavigation.navigate('ConfirmHomeScreen');\r\n        // }\r\n        // else if(action.payload.name === 'notify') {\r\n        //     RootNavigation.navigate('NotifyScreen');\r\n        // }\r\n        // else\r\n        // RootNavigation.navigate('HomeMainScreen');\r\n    }\r\n    else{\r\n        console.log('error slider')\r\n    }\r\n}\r\n\r\nfunction* getInfoUserSaga(action) {\r\n    // console.log(action)\r\n    const {res, err} = yield call(() => UserService.get());\r\n\r\n    // console.log('res 1', res);\r\n    // console.log('err 1', err)\r\n\r\n    if(res?.status === 200) {\r\n        yield put(getInfoUserSuccess(res.data))\r\n    }\r\n    else  {\r\n        console.log('error slider')\r\n    }\r\n}\r\n\r\nfunction* updateInfoUserSaga(action) {\r\n    // console.log(action)\r\n    const {res1, err} = yield call(() => UserService.change(action.payload));\r\n\r\n    // console.log('res 1', res1.status);\r\n    // console.log('err 1', err)\r\n\r\n    if(res1.status === 202) {\r\n        \r\n        const {res, err} = yield call(() => UserService.get());\r\n\r\n            // console.log('res 2', res.data);\r\n            // console.log('err 1', err)\r\n\r\n            if(res.status === 200) {\r\n                yield put(getInfoUserSuccess(res.data))\r\n                yield put(updateInfoUserSuccess(res1.data))\r\n                showMessage({\r\n                    message: 'Cập nhật thông tin thành công',\r\n                    type: 'success',\r\n                    duration: 3000\r\n                })\r\n            }\r\n            else  {\r\n                console.log('error get')\r\n            }\r\n    }\r\n    else  {\r\n        console.log('error update')\r\n    }\r\n}\r\n\r\nfunction* getListOrderUserSaga(action) {\r\n    // console.log(action)\r\n    const {res, err} = yield call(() => UserService.getOrder());\r\n    // console.log('res 1', res);\r\n    // console.log('err 1', err)\r\n\r\n    if(res?.status === 200) {\r\n        yield put(getListOrderUserSuccess(res.data))\r\n    }\r\n    else  {\r\n        console.log('error slider')\r\n    }\r\n}\r\n\r\nexport function* watchGetListOrderUserSaga() {\r\n    yield takeEvery(getListOrderUser, getListOrderUserSaga);\r\n}\r\n\r\nexport function* watchUpdateInfoUserSaga() {\r\n    yield takeEvery(updateInfoUser, updateInfoUserSaga);\r\n}\r\n\r\n\r\nexport function* watchGetInfoUserSaga() {\r\n    yield takeEvery(getInfoUser, getInfoUserSaga);\r\n}\r\n\r\nexport function* watchGetLoginUser() {\r\n    yield takeEvery(loginUser, getLoginUser);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}