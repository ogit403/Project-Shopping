{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\App-Shopping\\\\screens\\\\OrderScreen\\\\OrderScreen.jsx\";\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport styles from \"./OrderScreenStyle\";\nimport { Searchbar } from 'react-native-paper';\nimport { FormatPriceGold } from \"../../help\";\nimport StepIndicator from 'react-native-step-indicator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getListOrderUser } from \"../../store/slices/userSlice\";\nimport DetailOrderScreen from \"../DetailOrderScren/DetailOrderScreen\";\nimport { searchDetail } from \"../../store/slices/orderSlice\";\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nvar labels = [\"Cart\", \"Delivery Address\", \"Order Summary\"];\nvar customStyles = {\n  stepIndicatorSize: 25,\n  currentStepIndicatorSize: 30,\n  separatorStrokeWidth: 2,\n  currentStepStrokeWidth: 3,\n  stepStrokeCurrentColor: '#fe7013',\n  stepStrokeWidth: 3,\n  stepStrokeFinishedColor: '#fe7013',\n  stepStrokeUnFinishedColor: '#aaaaaa',\n  separatorFinishedColor: '#fe7013',\n  separatorUnFinishedColor: '#aaaaaa',\n  stepIndicatorFinishedColor: '#fe7013',\n  stepIndicatorUnFinishedColor: '#ffffff',\n  stepIndicatorCurrentColor: '#ffffff',\n  stepIndicatorLabelFontSize: 13,\n  currentStepIndicatorLabelFontSize: 13,\n  stepIndicatorLabelCurrentColor: '#fe7013',\n  stepIndicatorLabelFinishedColor: '#ffffff',\n  stepIndicatorLabelUnFinishedColor: '#aaaaaa',\n  labelColor: '#999999',\n  labelSize: 13,\n  currentStepLabelColor: '#fe7013'\n};\n\nvar OrderScreen = function OrderScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var listOrder = useSelector(function (state) {\n    return state.User.listOrder;\n  });\n  var detail = useSelector(function (state) {\n    return state.Order.detail;\n  });\n  console.log(detail);\n  var isLogin = useSelector(function (state) {\n    return state.User.isLogin;\n  });\n  var navigation = useNavigation();\n  var isFocused = useIsFocused();\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  useLayoutEffect(function () {\n    setCount(function (count) {\n      return count + 1;\n    });\n\n    if (isFocused) {\n      if (!isLogin) {\n        if (count >= 3) {\n          navigation.navigate('HomeScreen');\n          navigation.pop();\n        } else {\n          navigation.navigate('LoginHomeScreen');\n        }\n      }\n    } else dispatch(getListOrderUser());\n  }, [isFocused]);\n\n  var onSubmit = function onSubmit() {\n    dispatch(searchDetail(key));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Nh\\u1EADp v\\xE0o \\u0111\\u01A1n h\\xE0ng b\\u1EA1n mu\\u1ED1n t\\xECm:\"), React.createElement(View, {\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Nh\\u1EADp t\\xEAn s\\u1EA3n ph\\u1EA9m...\",\n    style: styles.input,\n    onChangeText: function onChangeText(value) {\n      return setKey(value);\n    },\n    onSubmitEditing: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  })), Object.keys(detail).length ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.titleOrder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Chi ti\\u1EBFt \\u0111\\u01A1n h\\xE0ng\")), React.createElement(DetailOrderScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null)));\n};\n\nexport default OrderScreen;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/screens/OrderScreen/OrderScreen.jsx"],"names":["React","useEffect","useLayoutEffect","useState","styles","Searchbar","FormatPriceGold","StepIndicator","useDispatch","useSelector","getListOrderUser","DetailOrderScreen","searchDetail","useIsFocused","useNavigation","labels","customStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","currentStepLabelColor","OrderScreen","dispatch","key","setKey","listOrder","state","User","detail","Order","console","log","isLogin","navigation","isFocused","count","setCount","navigate","pop","onSubmit","container","search","paddingBottom","input","value","Object","keys","length","alignItems","titleOrder"],"mappings":"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","sourcesContent":["import { View, Text, ScrollView, Image } from 'react-native'\r\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport styles from './OrderScreenStyle'\r\nimport { Searchbar } from 'react-native-paper';\r\nimport { FormatPriceGold } from '../../help';\r\n\r\nimport StepIndicator from 'react-native-step-indicator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getListOrderUser } from '../../store/slices/userSlice';\r\nimport DetailOrderScreen from '../DetailOrderScren/DetailOrderScreen';\r\nimport { searchDetail } from '../../store/slices/orderSlice';\r\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\r\n \r\nconst labels = [\"Cart\",\"Delivery Address\",\"Order Summary\"];\r\nconst customStyles = {\r\n  stepIndicatorSize: 25,\r\n  currentStepIndicatorSize:30,\r\n  separatorStrokeWidth: 2,\r\n  currentStepStrokeWidth: 3,\r\n  stepStrokeCurrentColor: '#fe7013',\r\n  stepStrokeWidth: 3,\r\n  stepStrokeFinishedColor: '#fe7013',\r\n  stepStrokeUnFinishedColor: '#aaaaaa',\r\n  separatorFinishedColor: '#fe7013',\r\n  separatorUnFinishedColor: '#aaaaaa',\r\n  stepIndicatorFinishedColor: '#fe7013',\r\n  stepIndicatorUnFinishedColor: '#ffffff',\r\n  stepIndicatorCurrentColor: '#ffffff',\r\n  stepIndicatorLabelFontSize: 13,\r\n  currentStepIndicatorLabelFontSize: 13,\r\n  stepIndicatorLabelCurrentColor: '#fe7013',\r\n  stepIndicatorLabelFinishedColor: '#ffffff',\r\n  stepIndicatorLabelUnFinishedColor: '#aaaaaa',\r\n  labelColor: '#999999',\r\n  labelSize: 13,\r\n  currentStepLabelColor: '#fe7013'\r\n}\r\n \r\n\r\nconst OrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [key, setKey] = useState('');\r\n  const listOrder = useSelector(state => state.User.listOrder);\r\n  const detail = useSelector(state => state.Order.detail);\r\n  console.log(detail)\r\n  const isLogin = useSelector(state => state.User.isLogin)\r\n  const navigation = useNavigation();\r\n  const isFocused = useIsFocused();\r\n    const [count, setCount] = useState(0);\r\n\r\n    useLayoutEffect(() => {\r\n    setCount(count => count + 1);\r\n    if(isFocused){\r\n      if(!isLogin) {\r\n        if(count >= 3) {\r\n          navigation.navigate('HomeScreen')\r\n          navigation.pop();\r\n        }\r\n        else {\r\n          navigation.navigate('LoginHomeScreen')\r\n        }\r\n      }\r\n    }\r\n      else\r\n      dispatch(getListOrderUser())\r\n  }, [isFocused])\r\n\r\n  const onSubmit = () => {\r\n    dispatch(searchDetail(key));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n      <Text style={styles.search}>Nhập vào đơn hàng bạn muốn tìm:</Text>\r\n      <View style={{paddingBottom: 10}}>\r\n       <Searchbar\r\n          placeholder=\"Nhập tên sản phẩm...\"\r\n          style={styles.input}\r\n          onChangeText={(value) => setKey(value)}\r\n          onSubmitEditing={onSubmit}\r\n          />\r\n      </View>\r\n          \r\n          {Object.keys(detail).length ? \r\n          (\r\n            <>\r\n            <View style={{alignItems: 'center'}}>\r\n          <Text style={styles.titleOrder}>Chi tiết đơn hàng</Text>\r\n          </View>\r\n          <DetailOrderScreen/>\r\n            </>\r\n          )\r\n          : <></>}\r\n          \r\n\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default OrderScreen"]},"metadata":{},"sourceType":"module"}