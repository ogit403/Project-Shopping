{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getListCategory),\n    _marked2 = _regeneratorRuntime.mark(watchGetListCategory);\n\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport CategoryService from \"../services/categoryService\";\nimport HomeService from \"../services/homeService\";\nimport { getCategory, getCategorySuccess } from \"../store/slices/categorySlice\";\nimport { getCateHome, getCateHomeSuccess, getProductHome, getProductHomeSuccess, getProductNewHome, getProductNewHomeSuccess, getProductSpecHome, getProductSpecHomeSuccess, getSliderHome, getSliderHomeSuccess } from \"../store/slices/homeSlice\";\n\nfunction getListCategory(action) {\n  var _yield$call, res, err;\n\n  return _regeneratorRuntime.wrap(function getListCategory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(function () {\n            return CategoryService.list(action.payload);\n          });\n\n        case 2:\n          _yield$call = _context.sent;\n          res = _yield$call.res;\n          err = _yield$call.err;\n\n          if (!(res.status === 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getCategorySuccess(res.data));\n\n        case 8:\n          _context.next = 11;\n          break;\n\n        case 10:\n          if (res.status === 0) {}\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function watchGetListCategory() {\n  return _regeneratorRuntime.wrap(function watchGetListCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(getCategory, getListCategory);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/sagas/categorySaga.js"],"names":["getListCategory","watchGetListCategory","takeEvery","call","put","CategoryService","HomeService","getCategory","getCategorySuccess","getCateHome","getCateHomeSuccess","getProductHome","getProductHomeSuccess","getProductNewHome","getProductNewHomeSuccess","getProductSpecHome","getProductSpecHomeSuccess","getSliderHome","getSliderHomeSuccess","action","list","payload","res","err","status","data"],"mappings":";;uCAOUA,e;wCAcOC,oB;;AApBjB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP;AACA,OAAOC,WAAP;AACA,SAASC,WAAT,EAAsBC,kBAAtB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,cAA1C,EAA0DC,qBAA1D,EAAiFC,iBAAjF,EAAoGC,wBAApG,EAA8HC,kBAA9H,EAAkJC,yBAAlJ,EAA6KC,aAA7K,EAA4LC,oBAA5L;;AAEA,SAAUlB,eAAV,CAA0BmB,MAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGuB,iBAAMhB,IAAI,CAAC;AAAA,mBAAME,eAAe,CAACe,IAAhB,CAAqBD,MAAM,CAACE,OAA5B,CAAN;AAAA,WAAD,CAAV;;AAHvB;AAAA;AAGWC,UAAAA,GAHX,eAGWA,GAHX;AAGgBC,UAAAA,GAHhB,eAGgBA,GAHhB;;AAAA,gBAMOD,GAAG,CAACE,MAAJ,KAAe,GANtB;AAAA;AAAA;AAAA;;AAAA;AAOQ,iBAAMpB,GAAG,CAACI,kBAAkB,CAACc,GAAG,CAACG,IAAL,CAAnB,CAAT;;AAPR;AAAA;AAAA;;AAAA;AASS,cAAGH,GAAG,CAACE,MAAJ,KAAe,CAAlB,EAAqB,CAEzB;;AAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,OAAO,SAAUvB,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CAACK,WAAD,EAAcP,eAAd,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\nimport { takeEvery, call ,put } from 'redux-saga/effects'; \r\nimport CategoryService from '../services/categoryService';\r\nimport HomeService from '../services/homeService';\r\nimport { getCategory, getCategorySuccess } from '../store/slices/categorySlice';\r\nimport { getCateHome, getCateHomeSuccess, getProductHome, getProductHomeSuccess, getProductNewHome, getProductNewHomeSuccess, getProductSpecHome, getProductSpecHomeSuccess, getSliderHome, getSliderHomeSuccess } from '../store/slices/homeSlice';\r\n\r\nfunction* getListCategory(action) {\r\n    // console.log(action);\r\n\r\n    const {res, err} = yield call(() => CategoryService.list(action.payload));\r\n\r\n    // console.log('res', res)\r\n    if(res.status === 200) {\r\n        yield put(getCategorySuccess(res.data))\r\n    }\r\n    else if(res.status === 0) {\r\n        // console.log('error slider')\r\n    }\r\n}\r\n\r\nexport function* watchGetListCategory() {\r\n    yield takeEvery(getCategory, getListCategory);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}