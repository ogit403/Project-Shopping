{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\App-Shopping\\\\navigation\\\\AuthProvider.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport FlashMessage from 'react-native-flash-message';\nimport { Provider as PaperProvider, DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { NavigationContainer, DarkTheme, DefaultTheme } from '@react-navigation/native';\nimport { navigationRef } from \"./rootNavigation\";\nimport * as Notifications from 'expo-notifications';\nexport var AuthContext = createContext({});\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDark = _useState2[0],\n      setIsDark = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expoPushToken = _useState4[0],\n      setExpoPushToken = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      notification = _useState6[0],\n      setNotification = _useState6[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return console.log(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n\n  var CustomDefaultTheme = _objectSpread(_objectSpread(_objectSpread({}, DefaultTheme), PaperDefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), PaperDefaultTheme.colors)\n  });\n\n  var CustomDarkTheme = _objectSpread(_objectSpread(_objectSpread({}, DarkTheme), PaperDarkTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DarkTheme.colors), PaperDarkTheme.colors)\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isDark: isDark,\n      toggleTheme: function toggleTheme() {\n        setIsDark(function (isDark) {\n          return !isDark;\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(PaperProvider, {\n    theme: isDark ? CustomDarkTheme : CustomDefaultTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: isDark ? CustomDarkTheme : CustomDefaultTheme,\n    ref: navigationRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, children, React.createElement(FlashMessage, {\n    position: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default AuthProvider;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/navigation/AuthProvider.jsx"],"names":["React","createContext","useState","useNavigation","FlashMessage","Provider","PaperProvider","DarkTheme","PaperDarkTheme","DefaultTheme","PaperDefaultTheme","NavigationContainer","navigationRef","Notifications","AuthContext","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AuthProvider","children","isDark","setIsDark","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","useRef","responseListener","useEffect","registerForPushNotificationsAsync","then","token","console","log","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","removeNotificationSubscription","CustomDefaultTheme","colors","CustomDarkTheme","toggleTheme"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAQ,IAAIC,aAArB,EAAoCC,SAAS,IAAIC,cAAjD,EAAiEC,YAAY,IAAIC,iBAAjF,QAA0G,oBAA1G;AACA,SAASC,mBAAT,EAA8BJ,SAA9B,EAAyCE,YAAzC,QAA6D,0BAA7D;AACA,SAASG,aAAT;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,OAAO,IAAMC,WAAW,GAAGb,aAAa,CAAC,EAAD,CAAjC;AAGPY,aAAa,CAACE,sBAAd,CAAqC;AACjCC,EAAAA,kBAAkB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAa;AAC/BC,cAAAA,eAAe,EAAE,IADc;AAE/BC,cAAAA,eAAe,EAAE,KAFc;AAG/BC,cAAAA,cAAc,EAAE;AAHe,aAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADa,CAArC;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AACjC,kBAA4BnB,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOoB,MAAP;AAAA,MAAeC,SAAf;;AAEA,mBAA0CrB,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOsB,aAAP;AAAA,MAAsBC,gBAAtB;;AACF,mBAAwCvB,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOwB,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,oBAAoB,GAAGC,MAAM,EAAnC;AACA,MAAMC,gBAAgB,GAAGD,MAAM,EAA/B;AAEAE,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,iCAAiC,GAAGC,IAApC,CAAyC,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAA9C;AAGAN,IAAAA,oBAAoB,CAACS,OAArB,GAA+BxB,aAAa,CAACyB,+BAAd,CAA8C,UAAAZ,YAAY,EAAI;AAC3FC,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAF8B,CAA/B;AAKAI,IAAAA,gBAAgB,CAACO,OAAjB,GAA2BxB,aAAa,CAAC0B,uCAAd,CAAsD,UAAAC,QAAQ,EAAI;AAC3FL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACD,KAF0B,CAA3B;AAIA,WAAO,YAAM;AACX3B,MAAAA,aAAa,CAAC4B,8BAAd,CAA6Cb,oBAAoB,CAACS,OAAlE;AACAxB,MAAAA,aAAa,CAAC4B,8BAAd,CAA6CX,gBAAgB,CAACO,OAA9D;AACD,KAHD;AAID,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBE,MAAMK,kBAAkB,iDACjBjC,YADiB,GAEjBC,iBAFiB;AAGpBiC,IAAAA,MAAM,kCACDlC,YAAY,CAACkC,MADZ,GAEDjC,iBAAiB,CAACiC,MAFjB;AAHc,IAAxB;;AASE,MAAMC,eAAe,iDAChBrC,SADgB,GAEhBC,cAFgB;AAGnBmC,IAAAA,MAAM,kCACDpC,SAAS,CAACoC,MADT,GAEDnC,cAAc,CAACmC,MAFd;AAHa,IAArB;;AASF,SACI,oBAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE;AACHrB,MAAAA,MAAM,EAANA,MADG;AAEHuB,MAAAA,WAAW,EAAE,uBAAM;AACftB,QAAAA,SAAS,CAAC,UAAAD,MAAM;AAAA,iBAAI,CAACA,MAAL;AAAA,SAAP,CAAT;AACH;AAJE,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQA,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,MAAM,GAAGsB,eAAH,GAAqBF,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEpB,MAAM,GAAGsB,eAAH,GAAqBF,kBAAvD;AAA2E,IAAA,GAAG,EAAE9B,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEDS,QAFC,EAGE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CARA,CADJ;AAkBH,CA/DD;;AAiEA,eAAeD,YAAf","sourcesContent":["import React, {createContext, useState} from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport FlashMessage from 'react-native-flash-message'\r\nimport { Provider as PaperProvider, DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper'\r\nimport { NavigationContainer, DarkTheme, DefaultTheme } from '@react-navigation/native';\r\nimport { navigationRef } from './rootNavigation';\r\nimport * as Notifications from 'expo-notifications';\r\nexport const AuthContext = createContext({})\r\n\r\n\r\nNotifications.setNotificationHandler({\r\n    handleNotification: async () => ({\r\n      shouldShowAlert: true,\r\n      shouldPlaySound: false,\r\n      shouldSetBadge: false,\r\n    }),\r\n  });\r\n\r\nconst AuthProvider = ({children}) => {\r\n    const [isDark, setIsDark] = useState(false)\r\n\r\n    const [expoPushToken, setExpoPushToken] = useState('');\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n  useEffect(() => {\r\n    registerForPushNotificationsAsync().then(token => console.log(token));\r\n\r\n    // This listener is fired whenever a notification is received while the app is foregrounded\r\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n      setNotification(notification);\r\n    });\r\n\r\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n      console.log(response);\r\n    });\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current);\r\n      Notifications.removeNotificationSubscription(responseListener.current);\r\n    };\r\n  }, []);\r\n\r\n    const CustomDefaultTheme = {\r\n        ...DefaultTheme,\r\n        ...PaperDefaultTheme,\r\n        colors: {\r\n          ...DefaultTheme.colors,\r\n          ...PaperDefaultTheme.colors\r\n        }\r\n      }\r\n    \r\n      const CustomDarkTheme = {\r\n        ...DarkTheme,\r\n        ...PaperDarkTheme,\r\n        colors: {\r\n          ...DarkTheme.colors,\r\n          ...PaperDarkTheme.colors\r\n        }\r\n      }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n        value={{\r\n            isDark,\r\n            toggleTheme: () => {\r\n                setIsDark(isDark => !isDark)\r\n            }\r\n        }}\r\n    >\r\n        <PaperProvider theme={isDark ? CustomDarkTheme : CustomDefaultTheme}>\r\n          <NavigationContainer theme={isDark ? CustomDarkTheme : CustomDefaultTheme} ref={navigationRef}>\r\n            {/* <Routers /> */}\r\n        {children}\r\n            <FlashMessage position=\"top\" />\r\n          </NavigationContainer>\r\n        </PaperProvider>\r\n    </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}