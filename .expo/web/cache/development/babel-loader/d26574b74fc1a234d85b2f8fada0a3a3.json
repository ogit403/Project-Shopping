{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getInfoDetailOrder),\n    _marked2 = _regeneratorRuntime.mark(watchGetInfoDetailOrder);\n\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport OrderService from \"../services/orderService\";\nimport { searchDetail, searchDetailSuccess } from \"../store/slices/orderSlice\";\n\nfunction getInfoDetailOrder(action) {\n  var _yield$call, res, err;\n\n  return _regeneratorRuntime.wrap(function getInfoDetailOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(function () {\n            return OrderService.detail(action.payload);\n          });\n\n        case 2:\n          _yield$call = _context.sent;\n          res = _yield$call.res;\n          err = _yield$call.err;\n\n          if (!(res.status === 201)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(searchDetailSuccess(res.data));\n\n        case 8:\n          _context.next = 11;\n          break;\n\n        case 10:\n          if (res.data.status === 0) {\n            console.log('error cart');\n          }\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function watchGetInfoDetailOrder() {\n  return _regeneratorRuntime.wrap(function watchGetInfoDetailOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(searchDetail, getInfoDetailOrder);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/sagas/orderSaga.js"],"names":["getInfoDetailOrder","watchGetInfoDetailOrder","takeEvery","call","put","OrderService","searchDetail","searchDetailSuccess","action","detail","payload","res","err","status","data","console","log"],"mappings":";;uCAKUA,kB;wCAcOC,uB;;AAlBjB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,YAAP;AACA,SAASC,YAAT,EAAuBC,mBAAvB;;AAEA,SAAUP,kBAAV,CAA6BQ,MAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACuB,iBAAML,IAAI,CAAC;AAAA,mBAAME,YAAY,CAACI,MAAb,CAAoBD,MAAM,CAACE,OAA3B,CAAN;AAAA,WAAD,CAAV;;AADvB;AAAA;AACWC,UAAAA,GADX,eACWA,GADX;AACgBC,UAAAA,GADhB,eACgBA,GADhB;;AAAA,gBAMOD,GAAG,CAACE,MAAJ,KAAe,GANtB;AAAA;AAAA;AAAA;;AAAA;AAOQ,iBAAMT,GAAG,CAACG,mBAAmB,CAACI,GAAG,CAACG,IAAL,CAApB,CAAT;;AAPR;AAAA;AAAA;;AAAA;AASS,cAAGH,GAAG,CAACG,IAAJ,CAASD,MAAT,KAAoB,CAAvB,EAA0B;AAC3BE,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,OAAO,SAAUf,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CAACI,YAAD,EAAeN,kBAAf,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\nimport { takeEvery, call, put } from 'redux-saga/effects'; \r\nimport OrderService from '../services/orderService';\r\nimport { searchDetail, searchDetailSuccess } from '../store/slices/orderSlice';\r\n\r\nfunction* getInfoDetailOrder(action) {\r\n    const {res, err} = yield call(() => OrderService.detail(action.payload));\r\n        \r\n    // console.log('res', res)\r\n    // console.log('err', err)\r\n\r\n    if(res.status === 201) {\r\n        yield put(searchDetailSuccess(res.data))\r\n    }\r\n    else if(res.data.status === 0) {\r\n        console.log('error cart')\r\n    }\r\n}\r\n\r\nexport function* watchGetInfoDetailOrder() {\r\n    yield takeEvery(searchDetail, getInfoDetailOrder);\r\n}"]},"metadata":{},"sourceType":"module"}