{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(postListCart),\n    _marked2 = _regeneratorRuntime.mark(watchPostListCart);\n\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport CartService from \"../services/cartService\";\nimport { postOrder, postOrderSuccess } from \"../store/slices/cartSlice\";\nimport * as RootNavigation from \"../navigation/rootNavigation\";\n\nfunction postListCart(action) {\n  var _yield$call, res, err;\n\n  return _regeneratorRuntime.wrap(function postListCart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(function () {\n            return CartService.post(action.payload);\n          });\n\n        case 2:\n          _yield$call = _context.sent;\n          res = _yield$call.res;\n          err = _yield$call.err;\n          console.log('res', res);\n\n          if (!(res.status === 201)) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 9;\n          return put(postOrderSuccess(res.data));\n\n        case 9:\n          _context.next = 12;\n          break;\n\n        case 11:\n          if (res.data.status === 0) {}\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function watchPostListCart() {\n  return _regeneratorRuntime.wrap(function watchPostListCart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(postOrder, postListCart);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/sagas/cartSaga.js"],"names":["postListCart","watchPostListCart","takeEvery","call","put","CartService","postOrder","postOrderSuccess","RootNavigation","action","post","payload","res","err","console","log","status","data"],"mappings":";;uCAKUA,Y;wCAcOC,iB;;AAlBjB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,WAAP;AACA,SAASC,SAAT,EAAoBC,gBAApB;AACA,OAAO,KAAKC,cAAZ;;AACA,SAAUR,YAAV,CAAuBS,MAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACuB,iBAAMN,IAAI,CAAC;AAAA,mBAAME,WAAW,CAACK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB,CAAN;AAAA,WAAD,CAAV;;AADvB;AAAA;AACWC,UAAAA,GADX,eACWA,GADX;AACgBC,UAAAA,GADhB,eACgBA,GADhB;AAGIC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;;AAHJ,gBAKOA,GAAG,CAACI,MAAJ,KAAe,GALtB;AAAA;AAAA;AAAA;;AAAA;AAMQ,iBAAMZ,GAAG,CAACG,gBAAgB,CAACK,GAAG,CAACK,IAAL,CAAjB,CAAT;;AANR;AAAA;AAAA;;AAAA;AASS,cAAGL,GAAG,CAACK,IAAJ,CAASD,MAAT,KAAoB,CAAvB,EAA0B,CAE9B;;AAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,OAAO,SAAUf,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CAACI,SAAD,EAAYN,YAAZ,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\nimport { takeEvery, call, put } from 'redux-saga/effects'; \r\nimport CartService from '../services/cartService';\r\nimport { postOrder, postOrderSuccess } from '../store/slices/cartSlice';\r\nimport * as RootNavigation from '../navigation/rootNavigation';\r\nfunction* postListCart(action) {\r\n    const {res, err} = yield call(() => CartService.post(action.payload));\r\n        \r\n    console.log('res', res)\r\n\r\n    if(res.status === 201) {\r\n        yield put(postOrderSuccess(res.data))\r\n   \r\n    }\r\n    else if(res.data.status === 0) {\r\n        // console.log('error cart')\r\n    }\r\n}\r\n\r\nexport function* watchPostListCart() {\r\n    yield takeEvery(postOrder, postListCart);\r\n}"]},"metadata":{},"sourceType":"module"}