{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\App-Shopping\\\\components\\\\HeaderSearch\\\\HeaderSearch.jsx\";\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport styles from \"./HeaderSearchStyle\";\nimport IconHeader from \"../iconHeader/IconHeader\";\nimport IconRightHeader from \"../IconRightHeader/IconRightHeader\";\nimport { Searchbar } from 'react-native-paper';\nimport { AntDesign } from '@expo/vector-icons';\nimport { COLORS } from \"../../contains\";\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveKeywordSearch, searchValue } from \"../../store/slices/searchSlice\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\n\nvar HeaderSearch = function HeaderSearch() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var navigation = useNavigation();\n  var inputRef = useRef();\n  var isFocused = useIsFocused();\n  var dispatch = useDispatch();\n  var loading = useSelector(function (state) {\n    return state.Search.loadingSearch;\n  });\n  useLayoutEffect(function () {\n    var interval;\n\n    if (isFocused) {\n      interval = setInterval(function () {\n        var _inputRef$current;\n\n        inputRef == null ? void 0 : (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.focus();\n        clearInterval(interval);\n      }, 1000);\n    }\n\n    return function () {\n      clearInterval(interval);\n    };\n  }, [isFocused]);\n\n  var backHome = function backHome() {\n    navigation.goBack();\n  };\n\n  var onSubmit = function onSubmit() {\n    dispatch(saveKeywordSearch(text));\n    dispatch(searchValue(text));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Nh\\u1EADp t\\xEAn s\\u1EA3n ph\\u1EA9m...\",\n    style: styles.input,\n    ref: inputRef,\n    onSubmitEditing: onSubmit,\n    onChangeText: function onChangeText(value) {\n      return setText(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    onPress: backHome,\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Tho\\xE1t\"));\n};\n\nexport default HeaderSearch;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/components/HeaderSearch/HeaderSearch.jsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","styles","IconHeader","IconRightHeader","Searchbar","AntDesign","COLORS","useIsFocused","useNavigation","useDispatch","useSelector","saveKeywordSearch","searchValue","HeaderSearch","text","setText","navigation","inputRef","isFocused","dispatch","loading","state","Search","loadingSearch","interval","setInterval","current","focus","clearInterval","backHome","goBack","onSubmit","container","input","value"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,eAA3B,EAA4CC,MAA5C,EAAoDC,QAApD,QAAoE,OAApE;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,eAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,0BAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,EAA4BC,WAA5B;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,kBAAwBb,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;AACA,MAAMS,QAAQ,GAAGlB,MAAM,EAAvB;AACA,MAAMmB,SAAS,GAAGX,YAAY,EAA9B;AACA,MAAMY,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,OAAO,GAAGV,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAN,CAAaC,aAAjB;AAAA,GAAN,CAA3B;AAEAzB,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAI0B,QAAJ;;AACC,QAAGN,SAAH,EAAc;AACXM,MAAAA,QAAQ,GAAGC,WAAW,CAAC,YAAW;AAAA;;AAElCR,QAAAA,QAAQ,QAAR,iCAAAA,QAAQ,CAAES,OAAV,uCAAmBC,KAAnB;AACAC,QAAAA,aAAa,CAACJ,QAAD,CAAb;AACA,OAJsB,EAIpB,IAJoB,CAAtB;AAKD;;AACF,WAAO,YAAM;AAAEI,MAAAA,aAAa,CAACJ,QAAD,CAAb;AAA0B,KAAzC;AAEF,GAXc,EAWZ,CAACN,SAAD,CAXY,CAAf;;AAaA,MAAMW,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBb,IAAAA,UAAU,CAACc,MAAX;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBZ,IAAAA,QAAQ,CAACR,iBAAiB,CAACG,IAAD,CAAlB,CAAR;AACAK,IAAAA,QAAQ,CAACP,WAAW,CAACE,IAAD,CAAZ,CAAR;AACD,GAHD;;AAMF,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAAC+B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACM,IAAA,WAAW,EAAC,wCADlB;AAEM,IAAA,KAAK,EAAE/B,MAAM,CAACgC,KAFpB;AAGM,IAAA,GAAG,EAAEhB,QAHX;AAIM,IAAA,eAAe,EAAEc,QAJvB;AAKM,IAAA,YAAY,EAAE,sBAACG,KAAD;AAAA,aAAWnB,OAAO,CAACmB,KAAD,CAAlB;AAAA,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEL,QAAf;AAAyB,IAAA,KAAK,EAAE5B,MAAM,CAACa,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF;AAYD,CA3CD;;AA6CA,eAAeD,YAAf","sourcesContent":["import { View, Text } from 'react-native'\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport styles from './HeaderSearchStyle'\r\nimport IconHeader from '../iconHeader/IconHeader'\r\nimport IconRightHeader from '../IconRightHeader/IconRightHeader'\r\nimport { Searchbar } from 'react-native-paper';\r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport { COLORS } from '../../contains'\r\nimport { useIsFocused, useNavigation } from '@react-navigation/native'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveKeywordSearch, searchValue } from '../../store/slices/searchSlice'\r\nimport { Keyboard } from 'react-native'\r\nconst HeaderSearch = () => {\r\n    const [text, setText] = useState('');\r\n    const navigation = useNavigation();\r\n    const inputRef = useRef();\r\n    const isFocused = useIsFocused();\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.Search.loadingSearch)\r\n\r\n    useLayoutEffect(() => {\r\n      let interval;\r\n       if(isFocused) {\r\n          interval = setInterval(function() {\r\n          // console.log('focus');\r\n          inputRef?.current?.focus();\r\n          clearInterval(interval); \r\n         }, 1000);\r\n        }\r\n       return () => { clearInterval(interval); };\r\n      //  clearInterval(interval);\r\n    }, [isFocused])\r\n\r\n    const backHome = () => {\r\n      navigation.goBack();\r\n    }\r\n\r\n    const onSubmit = () => {\r\n      dispatch(saveKeywordSearch(text));\r\n      dispatch(searchValue(text))\r\n    }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Searchbar\r\n            placeholder=\"Nhập tên sản phẩm...\"\r\n            style={styles.input}\r\n            ref={inputRef}\r\n            onSubmitEditing={onSubmit}\r\n            onChangeText={(value) => setText(value)}\r\n      />\r\n      <Text onPress={backHome} style={styles.text}>Thoát</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default HeaderSearch"]},"metadata":{},"sourceType":"module"}