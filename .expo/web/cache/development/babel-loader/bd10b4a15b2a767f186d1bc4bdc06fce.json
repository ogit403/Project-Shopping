{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getValueSearch),\n    _marked2 = _regeneratorRuntime.mark(watchGetValueSearch);\n\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport OrderService from \"../services/orderService\";\nimport SearchService from \"../services/searchService\";\nimport { searchDetail, searchDetailSuccess } from \"../store/slices/orderSlice\";\nimport { searchValue, searchValueSuccess } from \"../store/slices/searchSlice\";\n\nfunction getValueSearch(action) {\n  var _yield$call, res, err;\n\n  return _regeneratorRuntime.wrap(function getValueSearch$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(function () {\n            return SearchService.get(action.payload);\n          });\n\n        case 2:\n          _yield$call = _context.sent;\n          res = _yield$call.res;\n          err = _yield$call.err;\n\n          if (!(res.status === 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(searchValueSuccess(res.data));\n\n        case 8:\n          _context.next = 11;\n          break;\n\n        case 10:\n          console.log('error cart');\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function watchGetValueSearch() {\n  return _regeneratorRuntime.wrap(function watchGetValueSearch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(searchValue, getValueSearch);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/sagas/searchSaga.js"],"names":["getValueSearch","watchGetValueSearch","takeEvery","call","put","OrderService","SearchService","searchDetail","searchDetailSuccess","searchValue","searchValueSuccess","action","get","payload","res","err","status","data","console","log"],"mappings":";;uCAOUA,c;wCAeOC,mB;;AArBjB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,SAASC,YAAT,EAAuBC,mBAAvB;AACA,SAASC,WAAT,EAAsBC,kBAAtB;;AAEA,SAAUV,cAAV,CAAyBW,MAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMR,IAAI,CAAC;AAAA,mBAAMG,aAAa,CAACM,GAAd,CAAkBD,MAAM,CAACE,OAAzB,CAAN;AAAA,WAAD,CAAV;;AAFvB;AAAA;AAEWC,UAAAA,GAFX,eAEWA,GAFX;AAEgBC,UAAAA,GAFhB,eAEgBA,GAFhB;;AAAA,gBAOOD,GAAG,CAACE,MAAJ,KAAe,GAPtB;AAAA;AAAA;AAAA;;AAAA;AAQQ,iBAAMZ,GAAG,CAACM,kBAAkB,CAACI,GAAG,CAACG,IAAL,CAAnB,CAAT;;AARR;AAAA;AAAA;;AAAA;AAWQC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,OAAO,SAAUlB,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CAACO,WAAD,EAAcT,cAAd,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\nimport { takeEvery, call, put } from 'redux-saga/effects'; \r\nimport OrderService from '../services/orderService';\r\nimport SearchService from '../services/searchService';\r\nimport { searchDetail, searchDetailSuccess } from '../store/slices/orderSlice';\r\nimport { searchValue, searchValueSuccess } from '../store/slices/searchSlice';\r\n\r\nfunction* getValueSearch(action) {\r\n    // console.log('saga', action.payload)\r\n    const {res, err} = yield call(() => SearchService.get(action.payload));\r\n\r\n    // console.log('res', res.data)\r\n    // console.log('err', err)\r\n\r\n    if(res.status === 200) {\r\n        yield put(searchValueSuccess(res.data))\r\n    }\r\n    else {\r\n        console.log('error cart')\r\n    }\r\n}\r\n\r\nexport function* watchGetValueSearch() {\r\n    yield takeEvery(searchValue, getValueSearch);\r\n}"]},"metadata":{},"sourceType":"module"}