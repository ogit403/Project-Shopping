{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getListDetail),\n    _marked2 = _regeneratorRuntime.mark(watchGetListDetail);\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport CategoryService from \"../services/categoryService\";\nimport DetailService from \"../services/detailService\";\nimport { getCategory, getCategorySuccess } from \"../store/slices/categorySlice\";\nimport { getDetail, getDetailSuccess } from \"../store/slices/detailSlice\";\n\nfunction getListDetail(action) {\n  var _yield$call, res, err;\n\n  return _regeneratorRuntime.wrap(function getListDetail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(function () {\n            return DetailService.item(action.payload);\n          });\n\n        case 2:\n          _yield$call = _context.sent;\n          res = _yield$call.res;\n          err = _yield$call.err;\n\n          if (!(res.status === 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getDetailSuccess(res.data));\n\n        case 8:\n          _context.next = 11;\n          break;\n\n        case 10:\n          if (res.status === 0) {\n            console.log('error slider');\n          }\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function watchGetListDetail() {\n  return _regeneratorRuntime.wrap(function watchGetListDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(getDetail, getListDetail);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/sagas/detailSaga.js"],"names":["getListDetail","watchGetListDetail","call","put","takeEvery","CategoryService","DetailService","getCategory","getCategorySuccess","getDetail","getDetailSuccess","action","item","payload","res","err","status","data","console","log"],"mappings":";;uCAOUA,a;wCAYOC,kB;;AAlBjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,SAASC,WAAT,EAAsBC,kBAAtB;AACA,SAASC,SAAT,EAAoBC,gBAApB;;AAEA,SAAUV,aAAV,CAAwBW,MAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACuB,iBAAMT,IAAI,CAAC;AAAA,mBAAMI,aAAa,CAACM,IAAd,CAAmBD,MAAM,CAACE,OAA1B,CAAN;AAAA,WAAD,CAAV;;AADvB;AAAA;AACWC,UAAAA,GADX,eACWA,GADX;AACgBC,UAAAA,GADhB,eACgBA,GADhB;;AAAA,gBAIOD,GAAG,CAACE,MAAJ,KAAe,GAJtB;AAAA;AAAA;AAAA;;AAAA;AAKQ,iBAAMb,GAAG,CAACO,gBAAgB,CAACI,GAAG,CAACG,IAAL,CAAjB,CAAT;;AALR;AAAA;AAAA;;AAAA;AAOS,cAAGH,GAAG,CAACE,MAAJ,KAAe,CAAlB,EAAqB;AACtBE,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;AATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAO,SAAUlB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMG,SAAS,CAACK,SAAD,EAAYT,aAAZ,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport CategoryService from '../services/categoryService';\r\nimport DetailService from '../services/detailService';\r\nimport { getCategory, getCategorySuccess } from '../store/slices/categorySlice';\r\nimport { getDetail, getDetailSuccess } from '../store/slices/detailSlice';\r\n\r\nfunction* getListDetail(action) {\r\n    const {res, err} = yield call(() => DetailService.item(action.payload));\r\n    \r\n\r\n    if(res.status === 200) {\r\n        yield put(getDetailSuccess(res.data))\r\n    }\r\n    else if(res.status === 0) {\r\n        console.log('error slider')\r\n    }\r\n}\r\n\r\nexport function* watchGetListDetail() {\r\n    yield takeEvery(getDetail, getListDetail);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}