{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\App-Shopping\\\\App.js\";\nimport { useFonts } from '@expo-google-fonts/inter';\nimport { NavigationContainer, DarkTheme, DefaultTheme } from '@react-navigation/native';\nimport AppLoading from 'expo-app-loading';\nimport React, { useContext, useState } from 'react';\nimport FlashMessage from \"react-native-flash-message\";\nimport { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { navigationRef } from \"./navigation/rootNavigation\";\nimport Routers from \"./navigation/routers\";\nimport store from \"./store\";\nimport { Provider as PaperProvider, DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nexport default function App(props) {\n  var _useFonts = useFonts({\n    'Poppins': require(\"./assets/fonts/Quicksand-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) return React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }\n  });\n  var persistor = persistStore(store);\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Routers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/App-Shopping/App.js"],"names":["useFonts","NavigationContainer","DarkTheme","DefaultTheme","AppLoading","React","useContext","useState","FlashMessage","Provider","persistStore","navigationRef","Routers","store","PaperProvider","PaperDarkTheme","PaperDefaultTheme","App","props","require","fontsLoaded","persistor"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,SAASC,mBAAT,EAA8BC,SAA9B,EAAyCC,YAAzC,QAA6D,0BAA7D;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,SAASJ,QAAQ,IAAIK,aAArB,EAAoCZ,SAAS,IAAIa,cAAjD,EAAiEZ,YAAY,IAAIa,iBAAjF,QAA0G,oBAA1G;AAGA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,kBAAoBlB,QAAQ,CAAC;AAC3B,eAAWmB,OAAO;AADS,GAAD,CAA5B;AAAA;AAAA,MAAKC,WAAL;;AAIA,MAAG,CAACA,WAAJ,EAAiB,OAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEjB,MAAIC,SAAS,GAAGX,YAAY,CAACG,KAAD,CAA5B;AAEA,SAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAFF;AAaD","sourcesContent":["import { useFonts } from '@expo-google-fonts/inter';\nimport { NavigationContainer, DarkTheme, DefaultTheme } from '@react-navigation/native';\nimport AppLoading from 'expo-app-loading';\nimport React, { useContext, useState } from 'react';\nimport FlashMessage from \"react-native-flash-message\";\nimport { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { navigationRef } from './navigation/rootNavigation';\nimport Routers from './navigation/routers';\nimport store from './store';\nimport { Provider as PaperProvider, DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper'\n\n\nexport default function App(props) {\n  let [fontsLoaded] = useFonts({\n    'Poppins': require('./assets/fonts/Quicksand-Bold.ttf'),\n  });\n\n  if(!fontsLoaded) return <AppLoading/>\n\n  let persistor = persistStore(store)\n  // console.log('hello')\n  return (\n\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        {/* <PaperProvider theme={isDark ? CustomDarkTheme : CustomDefaultTheme}> */}\n          {/* <NavigationContainer theme={isDark ? CustomDarkTheme : CustomDefaultTheme} ref={navigationRef}> */}\n            <Routers />\n            {/* <FlashMessage position=\"top\" /> */}\n          {/* </NavigationContainer> */}\n        {/* </PaperProvider> */}\n      {/* </PersistGate> */}\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}